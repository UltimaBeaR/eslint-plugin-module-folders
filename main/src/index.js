import { correctImportsRule } from './correctImportsRule.js';
import { parsedPackageJson } from './internal/parsedPackageJson.js';
import './internal/moduleTree.js';

// TODO: сделать кэш глобальный
// при проверках импортов - проходить по сегментам импортируемого пути и либо брать из кэша
// либо проходить по файлам (если кэша нет на этот сегмент пути - то есть под-папку) папки, парсить и создавать кэш
// если же выполняется правило для очередного файла - то этот файл сам тоже проверять и пересохранять в кэше, т.к.
// правила запускаются в том числе при изменениях файлов, соответственно любые изменения через ide приведут к
// обновлению кэша
// Либо другой вариант - ставить какой то вотчер изменений на файловую систему при инициализации.
//
// На каждый сегмент пути который учавствовал в импортах нужно делать кэш и в нем список файлов js/ts и пометки
// является ли этот файл паблик апи для папки-модуля
// Также для каждого имени файла абсолютного будет еще глобальная мапа для быстрого доступа по абсолютному имени файла к записи в кэше

console.log('module-folders init');

/**
 * @type {import('eslint').ESLint.Plugin}
 */
const plugin = {
  meta: {
    name: parsedPackageJson.name,
    version: parsedPackageJson.version,
  },

  rules: {
    'correct-imports': correctImportsRule,
  },
};

export default plugin;
